# -*- coding: utf-8 -*-
"""Hemp Oil Pricing Polynomial Model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PTZCsE6RYxQ5hHDudT8qTPIIX96PtGqf

# Predicting Hemp Oil Prices Using Regression

## Importing the libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

"""## Importing the dataset"""

dataset = pd.read_csv('Pricing.csv')
X = dataset.iloc[:, 0:-1].values
y = dataset.iloc[:, -1].values

"""## Training the Linear Regression model on the whole dataset"""

from sklearn.linear_model import LinearRegression
lin_reg = LinearRegression()
lin_reg.fit(X, y)

"""## Training the Polynomial Regression model on the whole dataset"""

from sklearn.preprocessing import PolynomialFeatures
poly_reg = PolynomialFeatures(degree = 4)
X_poly = poly_reg.fit_transform(X)
lin_reg_2 = LinearRegression()
lin_reg_2.fit(X_poly, y)

"""## Visualising the Linear Regression results"""

plt.figure(figsize=(8,8))
plt.scatter(X, y, color = 'red')
plt.plot(X, lin_reg.predict(X), color = 'blue')
plt.title('Pricing- Milligrams CBD (Linear Regression)')
plt.xlabel('Milligrams CBD')
plt.ylabel('Retail Price')
plt.show()
from sklearn.metrics import r2_score
print('r-squared:', r2_score(y, lin_reg.predict(X)))

"""## Visualising the Polynomial Regression results"""

plt.figure(figsize=(8,8))
plt.scatter(X, y, color = 'red')
plt.plot(X, lin_reg_2.predict(poly_reg.fit_transform(X)), color = 'blue')
plt.title('Truth or Bluff (Polynomial Regression)')
plt.xlabel('Position level')
plt.ylabel('Salary')
plt.show()
from sklearn.metrics import r2_score
print('r-squared:', r2_score(y, lin_reg_2.predict(poly_reg.fit_transform(X))))

"""## Visualising the Polynomial Regression results (for higher resolution and smoother curve)"""

plt.figure(figsize=(8,8))
X_grid = np.arange(min(X), max(X), 0.1)
X_grid = X_grid.reshape((len(X_grid), 1))
plt.scatter(X, y, color = 'red')
plt.plot(X_grid, lin_reg_2.predict(poly_reg.fit_transform(X_grid)), color = 'blue')
plt.title('Truth or Bluff (Polynomial Regression)')
plt.xlabel('Position level')
plt.ylabel('Salary')
plt.show()
from sklearn.metrics import r2_score
print('r-squared:', r2_score(y, lin_reg_2.predict(poly_reg.fit_transform(X))))

"""## Predicting a new result with Linear Regression"""

lin_reg.predict([[250]])

"""## Predicting a new result with Polynomial Regression"""

lin_reg_2.predict(poly_reg.fit_transform([[250]]))